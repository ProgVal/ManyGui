Only strings are currently permitted as text in TextField and
TextArea. In general, there should be as little type checking
as possible (i.e. converting with str(), like in ListBox).

Alt-F4 doesn't work for javagui Windows in MS Windows.

Importing tkgui in jython gives a non-intuitive error message. It
(tkgui) should simply be ignored.

Defaults don't work properly.

Window positioning doesn't work properly in javagui and tkgui.

The cursor position and the end marker of the selection should always
be the same in tkgui. That is not currently the case.

Setting the selection of a wxgui TextField or TextArea doesn't work.

Programs running javagui don't always quit, because of some unstable
thread code (which may wait for the wrong thread).

Selecting items in a ListBox with the arrow keys in javagui doesn't
cause the callback to be activated. (Using the JListModel in a more
conventional way would help, but would cause the callback to be called
when the selection is set programmatically, which is not the desired
behaviour.)

wxgui windows flicker excessively when resized.

All the text of a tkgui TextField or TextArea is selected when one
tabs into it. This is not consistent with wxgui and javagui, where the
selection is preserved.

The backends don't behave consistently wrt. setting or not setting
focus when the selection of a TextField or TextArea is set
programmatically.

RadioGroups don't work properly under BeOS.  BeOS will not allow
multiple groups within the one view - hence, at this stage, all radio
buttons are in the same group.

Labels under BeOS display line breaks as an unprintable character: 
this is because they are designed for single line use only.

test/test_textarea.py : under BeOS, both text areas are placed in 
the same position.  I don't know if this is a textarea or place bug.

All List- and Text- Views always have scrollbars under BeOS.
(Similar behaviour in other backends.)
