RadioGroups don't work properly in Jython.

References.py is broken in Python 2.2 and Jython 2.1b1.

The updates in test_textarea and test_textfield
don't work properly in tkgui.

tkgui radiobuttons (and probably checkboxes) don't
work properly. (See test_radiobutton.py,
for example.) RadioGroup doesn't work properly in
wxgui.

id() is broken in Jython and will probably not be fixed
soon. Therefore, any use of id() in Anygui (such as in
anygui.References) can not be guaranteed to be correct
in Jython. This should preferrably be fixed in Jython,
but failing that, by implementing some other id()
wraparound in Anygui.

Compiling Anygui apps to jar files seems problematic in
Jython, giving the error "anygui clashes with package
of same name".

The defaults for TextArea are overridden by the TextField
defaults in mswgui.

Label alignment (both vertical and horizontal) varies
across backends.

Labels display HTML tags in Jython on some platforms. (Old
Swing versions)

ListModel._set_value doesn't work properly; fails during
notification.

Setting tf.model.value moves selection to the end of
textfields/textareas in javagui.

Tabbing between fields and/or other controls doesn't work
in mswgui.

Only strings are currently permitted as text in TextField and
TextArea. In general, there should be as little type checking
as possible (i.e. converting with str(), like in ListBox).

Alt-F4 doesn't work for javagui Windows in MS Windows.

Importing tkgui in jython gives a non-intuitive error message. It
(tkgui) should simply be ignored.

The cursor position and the end marker of the selection should always
be the same in tkgui. That is not currently the case.

Programs running javagui don't always quit, because of some unstable
thread code (which may wait for the wrong thread).

Selecting items in a ListBox with the arrow keys in javagui doesn't
cause the callback to be activated. (Using the JListModel in a more
conventional way would help, but would cause the callback to be called
when the selection is set programmatically, which is not the desired
behaviour.)

The backends don't behave consistently wrt. setting or not setting
focus when the selection of a TextField or TextArea is set
programmatically.

Focus of TextArea is displayed properly under beosgui - click on another
window and back again to see selection/cursor. [Bug belongs to Bethon]

Anygui will not work [well|at all?] with a vanilla Bethon installation.
The updated files can be found at http://anygui.sourceforge.net/files.
Email matt@null.net for details on how to build, if you need help.

test/test.py crashes under systems where more than one application
object is not permitted.  [beosgui and wxgui]

Using the global Command-Q (Alt-Q under x86?) causes a thread related
error under beosgui.

RadioGroups don't work properly under BeOS.  BeOS will not allow
multiple groups within the one view - hence, at this stage, all radio
buttons are in the same group.

Labels under BeOS display line breaks as an unprintable character: 
this is because they are designed for single line use only.

All List- and Text- Views always have scrollbars under BeOS.
(Similar behaviour in other backends.)

beosgui.py does not implement _ensure_destroyed(). This will
prevent objects from being removed from a container, and/or
moved between containers.
